// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniCEC.Data.Models.DB;

namespace UniCEC.Data.Migrations
{
    [DbContext(typeof(UniCECContext))]
    [Migration("20230203115332_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniCEC.Data.Models.DB.ActivitiesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionActivityId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionActivityID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionActivityId");

                    b.ToTable("ActivitiesEntity");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClubContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClubFanpage")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Founding")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TotalMember")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Club");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.ClubRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ClubRole");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CeremonyTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CompetitionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionTypeID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndTimeRegister")
                        .HasColumnType("datetime");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<bool>("IsSponsor")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NumberOfParticipation")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfTeam")
                        .HasColumnType("int");

                    b.Property<int>("RequiredMin")
                        .HasColumnType("int");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.Property<string>("SeedsCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("SeedsDeposited")
                        .HasColumnType("float");

                    b.Property<double>("SeedsPoint")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartTimeRegister")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionTypeId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("CreatorID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ending")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumOfMember")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<double>("SeedsPoint")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionActivity");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("CompetitionEntity");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ChangerId")
                        .HasColumnType("int")
                        .HasColumnName("ChangerID");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionHistory");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionInClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("ClubID");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionInClub");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionInMajor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<int>("MajorId")
                        .HasColumnType("int")
                        .HasColumnName("MajorID");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("MajorId");

                    b.ToTable("CompetitionInMajor");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CompetitionRole");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<int>("CompetitionRoundTypeId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionRoundTypeID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfTeam")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SeedsPoint")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("CompetitionRoundTypeId");

                    b.ToTable("CompetitionRound");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRoundType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CompetitionRoundType");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CompetitionType");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MajorId")
                        .HasColumnType("int")
                        .HasColumnName("MajorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EntityType");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsLoseMatch")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfTeam")
                        .HasColumnType("int");

                    b.Property<int>("RoundId")
                        .HasColumnType("int")
                        .HasColumnName("RoundID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("ClubID");

                    b.Property<int>("ClubRoleId")
                        .HasColumnType("int")
                        .HasColumnName("ClubRoleID");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("ClubRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.MemberInCompetition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<int>("CompetitionRoleId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionRoleID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("CompetitionRoleId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberInCompetition");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.MemberTakesActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookerId")
                        .HasColumnType("int")
                        .HasColumnName("BookerID");

                    b.Property<int>("CompetitionActivityId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionActivityID");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("MemberID");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionActivityId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberTakesActivity");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.ParticipantInTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int")
                        .HasColumnName("ParticipantID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.Property<int>("TeamRoleId")
                        .HasColumnType("int")
                        .HasColumnName("TeamRoleID");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamRoleId");

                    b.ToTable("ParticipantInTeam");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.SeedsWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SeedsWallet");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvitedCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfStudentInTeam")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.TeamInMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MatchId")
                        .HasColumnType("int")
                        .HasColumnName("MatchID");

                    b.Property<int>("Scores")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamInMatch");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.TeamInRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("RoundId")
                        .HasColumnType("int")
                        .HasColumnName("RoundID");

                    b.Property<int>("Scores")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamInRound");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.TeamRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TeamRole");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("Closing")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Founding")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Openning")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UniCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("University");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DeviceToken")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StudentCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("UniversityID");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UniversityId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.ActivitiesEntity", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.CompetitionActivity", "CompetitionActivity")
                        .WithMany("ActivitiesEntities")
                        .HasForeignKey("CompetitionActivityId")
                        .HasConstraintName("FK__Activitie__Compe__5812160E")
                        .IsRequired();

                    b.Navigation("CompetitionActivity");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Club", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.University", "University")
                        .WithMany("Clubs")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK__Club__University__59063A47")
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Competition", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.CompetitionType", "CompetitionType")
                        .WithMany("Competitions")
                        .HasForeignKey("CompetitionTypeId")
                        .HasConstraintName("FK__Competiti__Compe__59FA5E80")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.University", "University")
                        .WithMany("Competitions")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK__Competiti__Unive__5AEE82B9")
                        .IsRequired();

                    b.Navigation("CompetitionType");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionActivity", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("CompetitionActivities")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Competiti__Compe__5BE2A6F2")
                        .IsRequired();

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionEntity", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("CompetitionEntities")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Competiti__Compe__5CD6CB2B")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.EntityType", "EntityType")
                        .WithMany("CompetitionEntities")
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK__Competiti__Entit__5DCAEF64")
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("EntityType");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionHistory", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("CompetitionHistories")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Competiti__Compe__5EBF139D")
                        .IsRequired();

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionInClub", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Club", "Club")
                        .WithMany("CompetitionInClubs")
                        .HasForeignKey("ClubId")
                        .HasConstraintName("FK__Competiti__ClubI__5FB337D6")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("CompetitionInClubs")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Competiti__Compe__60A75C0F")
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionInMajor", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("CompetitionInMajors")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Competiti__Compe__619B8048")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Major", "Major")
                        .WithMany("CompetitionInMajors")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__Competiti__Major__628FA481")
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRound", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("CompetitionRounds")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Competiti__Compe__6383C8BA")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.CompetitionRoundType", "CompetitionRoundType")
                        .WithMany("CompetitionRounds")
                        .HasForeignKey("CompetitionRoundTypeId")
                        .HasConstraintName("FK__Competiti__Compe__3D2915A8")
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("CompetitionRoundType");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Department", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Major", "Major")
                        .WithMany("Departments")
                        .HasForeignKey("MajorId")
                        .HasConstraintName("FK__Departmen__Major__6477ECF3")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.University", "University")
                        .WithMany("Departments")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK__Departmen__Unive__656C112C")
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Match", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.CompetitionRound", "Round")
                        .WithMany("Matches")
                        .HasForeignKey("RoundId")
                        .HasConstraintName("FK__Match__RoundID__339FAB6E")
                        .IsRequired();

                    b.Navigation("Round");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Member", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Club", "Club")
                        .WithMany("Members")
                        .HasForeignKey("ClubId")
                        .HasConstraintName("FK__Member__ClubID__66603565")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.ClubRole", "ClubRole")
                        .WithMany("Members")
                        .HasForeignKey("ClubRoleId")
                        .HasConstraintName("FK__Member__ClubRole__6754599E")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.User", "User")
                        .WithMany("Members")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Member__UserID__68487DD7")
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("ClubRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.MemberInCompetition", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("MemberInCompetitions")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__MemberInC__Compe__693CA210")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.CompetitionRole", "CompetitionRole")
                        .WithMany("MemberInCompetitions")
                        .HasForeignKey("CompetitionRoleId")
                        .HasConstraintName("FK__MemberInC__Compe__6A30C649")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Member", "Member")
                        .WithMany("MemberInCompetitions")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__MemberInC__Membe__6B24EA82")
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("CompetitionRole");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.MemberTakesActivity", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.CompetitionActivity", "CompetitionActivity")
                        .WithMany("MemberTakesActivities")
                        .HasForeignKey("CompetitionActivityId")
                        .HasConstraintName("FK__MemberTak__Compe__6C190EBB")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Member", "Member")
                        .WithMany("MemberTakesActivities")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__MemberTak__Membe__6D0D32F4")
                        .IsRequired();

                    b.Navigation("CompetitionActivity");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Notification", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__160F4887")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Participant", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("Participants")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Participa__Compe__6E01572D")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.User", "Student")
                        .WithMany("Participants")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Participa__Stude__6EF57B66")
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.ParticipantInTeam", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Participant", "Participant")
                        .WithMany("ParticipantInTeams")
                        .HasForeignKey("ParticipantId")
                        .HasConstraintName("FK__Participa__Parti__6FE99F9F")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Team", "Team")
                        .WithMany("ParticipantInTeams")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK__Participa__TeamI__70DDC3D8")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.TeamRole", "TeamRole")
                        .WithMany("ParticipantInTeams")
                        .HasForeignKey("TeamRoleId")
                        .HasConstraintName("FK__Participa__TeamR__71D1E811")
                        .IsRequired();

                    b.Navigation("Participant");

                    b.Navigation("Team");

                    b.Navigation("TeamRole");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.SeedsWallet", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.User", "Student")
                        .WithMany("SeedsWallets")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__SeedsWall__Stude__72C60C4A")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Team", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Competition", "Competition")
                        .WithMany("Teams")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK__Team__Competitio__73BA3083")
                        .IsRequired();

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.TeamInMatch", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Match", "Match")
                        .WithMany("TeamInMatches")
                        .HasForeignKey("MatchId")
                        .HasConstraintName("FK__TeamInMat__Match__37703C52")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Team", "Team")
                        .WithMany("TeamInMatches")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK__TeamInMat__TeamI__3864608B")
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.TeamInRound", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.CompetitionRound", "Round")
                        .WithMany("TeamInRounds")
                        .HasForeignKey("RoundId")
                        .HasConstraintName("FK__TeamInRou__Round__74AE54BC")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.Team", "Team")
                        .WithMany("TeamInRounds")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK__TeamInRou__TeamI__75A278F5")
                        .IsRequired();

                    b.Navigation("Round");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.University", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.City", "City")
                        .WithMany("Universities")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Universit__CityI__76969D2E")
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.User", b =>
                {
                    b.HasOne("UniCEC.Data.Models.DB.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__User__Department__778AC167");

                    b.HasOne("UniCEC.Data.Models.DB.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleID__787EE5A0")
                        .IsRequired();

                    b.HasOne("UniCEC.Data.Models.DB.University", "University")
                        .WithMany("Users")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK__User__University__797309D9");

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.City", b =>
                {
                    b.Navigation("Universities");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Club", b =>
                {
                    b.Navigation("CompetitionInClubs");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.ClubRole", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Competition", b =>
                {
                    b.Navigation("CompetitionActivities");

                    b.Navigation("CompetitionEntities");

                    b.Navigation("CompetitionHistories");

                    b.Navigation("CompetitionInClubs");

                    b.Navigation("CompetitionInMajors");

                    b.Navigation("CompetitionRounds");

                    b.Navigation("MemberInCompetitions");

                    b.Navigation("Participants");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionActivity", b =>
                {
                    b.Navigation("ActivitiesEntities");

                    b.Navigation("MemberTakesActivities");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRole", b =>
                {
                    b.Navigation("MemberInCompetitions");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRound", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("TeamInRounds");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionRoundType", b =>
                {
                    b.Navigation("CompetitionRounds");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.CompetitionType", b =>
                {
                    b.Navigation("Competitions");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.EntityType", b =>
                {
                    b.Navigation("CompetitionEntities");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Major", b =>
                {
                    b.Navigation("CompetitionInMajors");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Match", b =>
                {
                    b.Navigation("TeamInMatches");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Member", b =>
                {
                    b.Navigation("MemberInCompetitions");

                    b.Navigation("MemberTakesActivities");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Participant", b =>
                {
                    b.Navigation("ParticipantInTeams");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.Team", b =>
                {
                    b.Navigation("ParticipantInTeams");

                    b.Navigation("TeamInMatches");

                    b.Navigation("TeamInRounds");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.TeamRole", b =>
                {
                    b.Navigation("ParticipantInTeams");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.University", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("Competitions");

                    b.Navigation("Departments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniCEC.Data.Models.DB.User", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Notifications");

                    b.Navigation("Participants");

                    b.Navigation("SeedsWallets");
                });
#pragma warning restore 612, 618
        }
    }
}
